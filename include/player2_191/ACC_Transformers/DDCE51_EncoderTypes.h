#ifndef _DDCE51_ENCODER_TYPES_H_
#define _DDCE51_ENCODER_TYPES_H_

#include "acc_mmedefines.h"
typedef struct
{
	enum eAccBoolean CompOn;
	enum eAccBoolean CompOnSec;
	enum eAccBoolean TestMode;
	char   Ac3Mode;
	enum eAccBoolean LfeActivate;
	enum eAccBoolean LfeLpActivate;
	enum eAccBoolean SurDelayActivate;
} tMMEDdce51Config;

enum e_MME_AccDdce51ErrorCode
{
	MME_DDCE51_ERROR_AUXDAT_E,
	MME_DDCE51_ERROR_DFPE_1,
	MME_DDCE51_ERROR_DFPE_2,
	MME_DDCE51_ERROR_DFPE_3,
	MME_DDCE51_ERROR_EXPSEG,
	MME_DDCE51_ERROR_BAIE,
	MME_DDCE51_ERROR_GBITA_E,
	MME_DDCE51_ERROR_GBA_SUBS,
	MME_DDCE51_ERROR_GRPMANTS,
	MME_DDCE51_ERROR_PACK_MANTS,
	MME_DDCE51_ERROR_FMTEXPS_1,
	MME_DDCE51_ERROR_FMTEXPS_2,
	MME_DDCE51_ERROR_FMTEXPS_3,
	MME_DDCE51_ERROR_MCALL,
	MME_DDCE51_ERROR_PK_BITPAC_LJ,
	MME_DDCE51_ERROR_PK_BITPAC_RJ,
	MME_DDCE51_ERROR_PK_BITPAC_CT,
	MME_DDCE51_ERROR_XBITCNT_1,
	MME_DDCE51_ERROR_XBITCNT_2,
	MME_DDCE51_ERROR_XBITCNT_3,
	MME_DDCE51_ERROR_XCALL,
	MME_DDCE51_PARSE_INPUT_1,
	MME_DDCE51_PARSE_INPUT_2,
	MME_DDCE51_INIT_DERIVED,
	MME_DDCE51_ERROR_MAX
};
enum e_MME_AccDdce51ErrorLevel
{
	MME_DDCE51_OK = 0,
	MME_DDCE51_WARNING = 1,
	MME_DDCE51_FATAL =2
};

typedef struct
{
	enum e_MME_AccDdce51ErrorLevel ErrorLevel;
	enum e_MME_AccDdce51ErrorCode ErrorCode;

}MME_Ddce51Status_t;
#endif //_DDCE51_ENCODER_TYPES_H_


